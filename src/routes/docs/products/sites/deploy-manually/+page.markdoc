---
layout: article
title: Deploy manually
description: Learn to deploy Appwrite Sites manually from the Appwrite CLI or the Appwrite Console.
---

Appwrite Sites allows you to host and deploy web applications directly within the Appwrite platform. Each site can have many deployments, which can be thought of as versions of the web application.

While we recommend you create deployments through [automatic Git deployments](https://www.notion.so/Deploy-from-Git-ef9f0d144cc14e119379c8a2717bbab1?pvs=21), you can also create deployments manually or through the Appwrite CLI.

## CLI

You can create sites using the CLI without needing to access the Console.

{% info title="Before proceeding" %}

Ensure you [**install**](https://appwrite.io/docs/tooling/command-line/installation#getting-started) the CLI, [**log in**](https://appwrite.io/docs/tooling/command-line/installation#login) to your Appwrite account, and [**initialize**](https://appwrite.io/docs/tooling/command-line/installation#initialization) your Appwrite project.

{% /info %}

To deploy your site with the Appwrite CLI, use the `appwrite init sites` command to create a site on your Appwrite project.

```bash
appwrite init sites
```

To deploy the site, add any dependencies and push the function using the following command:

```bash
appwrite push sites
```

[Learn more about the CLI sites commands >](/docs/tooling/command-line/functions#commands)

### Configure CLI deployments

If you need to target a different project or API endpoint, change the output directory , or update any of the other configuration options, you can do so by editing the `appwrite.json` file.

[Learn more about appwrite.json >](/docs/tooling/command-line/functions#appwritejson)

## Manual Deployment

You can upload your sites to be deployed using the Appwrite Console. The example below shows a skeleton SvelteKit app.

```bash
.
├ src/
├ static/
├ package.json
├ svelte.config.js
├ tsconfig.json
└ vite.config.js
```

First, create a build using the `npm run build` command (or an alternative package manager link `yarn` or `pnpm`). Then navigate inside the folder that contains your build output (`./build` in SvelteKit) and package your code files into the `.tar.gz` format:

```bash
tar --exclude code.tar.gz -czf code.tar.gz .
```

Next, navigate to your Appwrite Console and upload the site.

1. Navigate to the site you want to deploy.
2. Click **Create deployment**.
3. Select the **Manual** tab.
4. Upload `code.tar.gz`.
5. Select **Activate deployment after build**.
6. Click **Create**.

## Debugging

- If you updated your site's configuration but the deployment is not working as expected, you may need to first redeploy your site before the changes take effect.
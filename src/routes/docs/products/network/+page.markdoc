---
layout: article
title: Network
description: --
---

Appwrite’s network is designed to deliver low-latency, high-performance experiences for developers and end-users alike. It leverages a robust Content Delivery Network (CDN) with edge locations across multiple regions to ensure fast and reliable data delivery. With distributed infrastructure and multiple deployment regions, Appwrite enables developers to build globally scalable applications while maintaining data sovereignty. Its architecture integrates seamlessly with APIs, storage, and databases, optimizing both speed and availability.

## Components {% #components %}
The Appwrite network is composed of multiple components that work together to deliver a seamless experience for developers and end-users. These components include:

{% cards %}
{% cards_item href="/docs/products/network/regions" title="Regions" %}
Multi-region deployments for geo-redundancy, compliance and low-latency.
{% /cards_item %}
{% cards_item href="/docs/products/network/edges" title="Edges" %}
Edge nodes for fast request processing and reduced round-trip times.
{% /cards_item %}
{% cards_item href="/docs/products/network/cdn" title="CDN" %}
Distributed caching with optimized routing for faster, more reliable data delivery.
{% /cards_item %}
{% /cards %}

### Region vs Edge {% #region-vs-edge %}

In Appwrite, Regions are where all your core data and services live. This includes your databases, auth, functions, messaging, and storage. Regions are the source of truth, handling heavy workloads and ensuring your application runs reliably while keeping your data compliant with local regulations.

Edges are about speed. They process requests closer to your users using smart geo-routing, reducing latency by handling compute tasks at the nearest edge location. Edges are perfect for serving cached content, executing lightweight computations, and optimizing user interactions.

## Architecture {% #architecture %}

Appwrite’s network is designed to provide a balance between centralized compute and distributed delivery:
- Regions: Core infrastructure and data resides in global regions, where all services like databases, auth, functions, messaging, and storage operate. These regions ensure data sovereignty, compliance, and high availability for critical workloads.
- Edges: Distributed edge locations process requests closer to end-users, leveraging smart geo-routing to minimize latency. These edge handle tasks like caching, static content delivery, and lightweight compute to improve performance.
- Private Routing: Data moves between edge nodes and regions through optimized, low-latency connections to ensure fast and reliable communication.

This setup separates heavy backend processing in regions from latency-sensitive tasks at the edge, enabling efficient handling of global workloads with minimal performance trade-offs.

## Features {% #features %}

{% cards %}
{% cards_item href="/docs/products/network/compression" title="Compression" %}
Advanced compression algorithms to optimize data throughput and storage.
{% /cards_item %}
{% cards_item href="/docs/products/network/caching" title="Caching" %}
Advanced compression algorithms to optimize data throughput and storage.
{% /cards_item %}
{% cards_item href="/docs/products/network/ddos" title="DDoS mitigation" %}
Advanced compression algorithms to optimize data throughput and storage.
{% /cards_item %}
{% cards_item href="/docs/products/network/tls" title="Transport Layer Security (TLS)" %}
Advanced compression algorithms to optimize data throughput and storage.
{% /cards_item %}
{% /cards %}